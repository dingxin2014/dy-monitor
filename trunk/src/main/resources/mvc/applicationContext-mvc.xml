<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
	    http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="false">
	

	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.dooioo.web.spring.DateConverter"/>
			</list>
		</property>
	</bean>
	
	 <!-- 对静态资源文件的访问，交给default servlet handler处理 -->  
	<mvc:default-servlet-handler/>
	
    <!-- 启用spring mvc 注解 -->  
    <context:annotation-config /> 

	<bean id="dataFormat" class="java.text.SimpleDateFormat">
		<constructor-arg value="yyyy-MM-dd HH:mm:ss"/>
	</bean>
     <!-- 默认的注解映射的支持 -->  
	<mvc:annotation-driven  conversion-service="conversionService">
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg index="0" value="UTF-8"/>
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.github.miemiedev.mybatis.paginator.jackson2.PageListJsonMapper" />
					<!-- 
					<bean class="com.dooioo.util.json.PageListJsonMapper">
						<property name="dateFormat" ref="dataFormat"/>
					</bean>
					 -->
				</property>
<!-- 				<property name="prettyPrint" value="false"></property> -->
			</bean>

		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 设置使用注解的类所在的包路径 -->  
    <context:component-scan base-package="com.dooioo.**.controller,com.dooioo.api.controller" use-default-filters="false">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>  
	
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查异常抛出处理 -->  
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 处理其它异常(包括Controller抛出的) -->
				<prop key="java.lang.Throwable">/error/500</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->  
		<property name="warnLogCategory" value="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"/>  
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->  
		<property name="defaultErrorView" value="/error/500"/>  
		<!-- 默认HTTP状态码 ，返回错误默认设置的状态码-->  
		<property name="defaultStatusCode" value="200"/>  
	</bean>
	
	<!-- 
	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> 
		<property name="prefix" value="/WEB-INF/pages/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="0" />
    </bean>
 	-->
 
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="jsp" value="text/html" />
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> 
					<property name="prefix" value="/pages/jsp/" />
					<property name="suffix" value=".jsp" />
					<property name="order" value="0" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
          <property name="defaultEncoding" value="UTF-8" /> <!-- 默认编码 (ISO-8859-1) -->
        <!-- set the max upload size100MB -->
        <property name="maxUploadSize" value="104857600"/> <!-- -1为无限制,最大文件大小限制为10M,10*1024*1024， -->
        <property name="maxInMemorySize" value="4096"/>
    </bean>



	
	<!-- freeMarker设置 -->
	<!-- 
	<bean id="rentsFreeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths">
			<list>
				<value>/freemarker/</value>
			</list>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.######</prop>
				<prop key="classic_compatible">true</prop>    
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
	</bean>
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	 -->
	 
    <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/api/**"/>
			<mvc:exclude-mapping path="/it/**"/>
			<bean class="com.dooioo.web.interceptor.LoginInterceptor" ></bean>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/api/**" />
			<bean class="com.dooioo.web.interceptor.ApiInterceptor" ></bean>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/api/**"/>
			<mvc:exclude-mapping path="/it/**"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/images/**"/>
			<mvc:exclude-mapping path="/images/**"/>
			<bean class="com.dooioo.web.interceptor.AuthorityInterceptor" >
				<property name="excludes">
					<array>
						<value>com.dooioo.ereceipt.common.controller.WelcomeController.index</value>
					</array>
				</property>
			</bean>
		</mvc:interceptor>
		
		<!-- 读写拦截必须放在登录拦截之后，主要是为了获取登录拦截中设置的用户信息 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/static/**"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/images/**"/>
			<bean class="com.dooioo.util.db.ReadOnlyInterceptor" ></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
    <!--<aop:aspectj-autoproxy proxy-target-class="true" /> -->
</beans>