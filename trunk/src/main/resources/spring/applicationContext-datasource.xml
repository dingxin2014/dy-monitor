<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="false">


<!-- sql执行统计 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="${druid.pool.slowSqlMillis}" />
		<property name="logSlowSql" value="${druid.pool.logSlowSql}" />
		<property name="mergeSql" value="${druid.pool.mergeSql}" />
	</bean>
     
<!--     <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter"> -->
        <!-- <property name="resultSetLogEnabled" value="false" /> -->
        <!-- <property name="statementExecutableSqlLogEnable" value="true" /> -->
<!--     </bean> -->
     
     <!-- sql注入攻击防火墙 -->
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="sqlserver" />
        <property name="config" ref="wall-filter-config" />
        <property name="throwException" value="false"></property>
        <property name="logViolation" value="false"></property>
    </bean>
     
    <bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig" init-method="init">
        <property name="dir" value="META-INF/druid/wall/sqlserver" />
    </bean>
	
	<!-- 配置druid监控spring jdbc -->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
		<property name="patterns">
			<list>
				<value>com.dooioo.*.*.service.impl.*</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>
	
	<!-- 应用程序-采购-数据库数据源 读写库 -->
	<bean id="eReceiptDataSourceRW" class="com.dooioo.util.db.AppDatasource" init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="${${env}.${appCode}.jdbc.driver}" />

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${${env}.${appCode}.jdbc.url}" />
		<property name="username" value="${${env}.${appCode}.jdbc.username}" />
		<property name="password" value="${${env}.${appCode}.jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.pool.initialSize}" />
		<property name="minIdle" value="${druid.pool.minIdle}" />
		<property name="maxActive" value="${druid.pool.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${druid.pool.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${druid.pool.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${druid.pool.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${druid.pool.validationQuery}" />
		<property name="testWhileIdle" value="${druid.pool.testWhileIdle}" />
		<property name="testOnBorrow" value="${druid.pool.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.pool.testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${druid.pool.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.pool.maxPoolPreparedStatementPerConnectionSize}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="log4j" />
		
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="wall-filter" />
			</list>
		</property>
	</bean>
	
	<!-- 应用程序-采购-数据库数据源 只读库 -->
	<bean id="eReceiptDataSourceR" class="com.dooioo.util.db.AppDatasource" init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="${${env}.${appCode}.read.jdbc.driver}" />

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${${env}.${appCode}.read.jdbc.url}" />
		<property name="username" value="${${env}.${appCode}.read.jdbc.username}" />
		<property name="password" value="${${env}.${appCode}.read.jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.pool.initialSize}" />
		<property name="minIdle" value="${druid.pool.minIdle}" />
		<property name="maxActive" value="${druid.pool.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${druid.pool.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${druid.pool.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${druid.pool.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${druid.pool.validationQuery}" />
		<property name="testWhileIdle" value="${druid.pool.testWhileIdle}" />
		<property name="testOnBorrow" value="${druid.pool.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.pool.testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${druid.pool.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.pool.maxPoolPreparedStatementPerConnectionSize}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="log4j" />
		
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="wall-filter" />
			</list>
		</property>
	</bean>
	
	<!-- 动态数据源 -->
	<bean id="eReceiptDataSource" class="com.dooioo.util.db.RoutingDatasource">
		<property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry value-ref="eReceiptDataSourceR" key="eReceiptDataSourceR"></entry>  
                <entry value-ref="eReceiptDataSourceRW" key="eReceiptDataSourceRW"></entry>  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="eReceiptDataSourceRW" />  
	</bean>
	
	
	<!-- EAS-数据库数据源 -->
	<bean id="easDataSource" class="com.dooioo.util.db.AppDatasource" init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="${${env}.eas.jdbc.driver}" />

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${${env}.eas.jdbc.url}" />
		<property name="username" value="${${env}.eas.jdbc.username}" />
		<property name="password" value="${${env}.eas.jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.pool.initialSize}" />
		<property name="minIdle" value="${druid.pool.minIdle}" />
		<property name="maxActive" value="${druid.pool.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${druid.pool.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${druid.pool.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${druid.pool.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${druid.pool.validationQuery}" />
		<property name="testWhileIdle" value="${druid.pool.testWhileIdle}" />
		<property name="testOnBorrow" value="${druid.pool.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.pool.testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${druid.pool.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.pool.maxPoolPreparedStatementPerConnectionSize}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="log4j" />
		
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="wall-filter" />
			</list>
		</property>
	</bean>
	
	<!-- 银企-数据库数据源 -->
	<bean id="bankDataSource" class="com.dooioo.util.db.AppDatasource" init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="${${env}.bank.jdbc.driver}" />

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${${env}.bank.jdbc.url}" />
		<property name="username" value="${${env}.bank.jdbc.username}" />
		<property name="password" value="${${env}.bank.jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.pool.initialSize}" />
		<property name="minIdle" value="${druid.pool.minIdle}" />
		<property name="maxActive" value="${druid.pool.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${druid.pool.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${druid.pool.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${druid.pool.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${druid.pool.validationQuery}" />
		<property name="testWhileIdle" value="${druid.pool.testWhileIdle}" />
		<property name="testOnBorrow" value="${druid.pool.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.pool.testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${druid.pool.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.pool.maxPoolPreparedStatementPerConnectionSize}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="log4j" />
		
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="wall-filter" />
			</list>
		</property>
	</bean>
</beans>