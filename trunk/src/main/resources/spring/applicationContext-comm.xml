<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task.xsd"
	default-lazy-init="false">

	<bean id="propertyConfigurer"
		class="com.dooioo.util.AppPropertyConfigurer">
		<property name="locations">
			<list>
 				<value>classpath:config/db/jdbc.properties</value>
				<value>classpath:config/db/jdbc.read.properties</value>
				<value>classpath:global.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
	
	<!-- 扫描的包路径,去掉mvc的controller注解-->
	<context:component-scan base-package="com.dooioo">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<task:executor id="executor" pool-size="30" keep-alive="300" queue-capacity="500"/>
    <task:scheduler id="scheduler" pool-size="30"/>
    <task:annotation-driven executor="executor" scheduler="scheduler"/>
    
    <aop:aspectj-autoproxy proxy-target-class="true" /> 
    
    <bean
        class="com.lianjia.sh.se.login.spi.adapt.bootstrap.LoginContextBootstrap">
        <property name="env" value="${env}"></property>
    </bean>
    
	<!--  图片服务器 使用到的类 start-->
	<bean id="fsHik" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<!-- 远程服务的url -->
		<property name="serviceUrl" value="${fsHik.url}" />
		<!-- 远程服务所实现的接口 -->
		<property name="serviceInterface" value="com.dooioo.fs.facade.IFsFacade" />
	</bean>
	<!--  图片服务器 使用到的类  end -->
    
    <!-- job client 配置 配置jobHandler将会使本项目所有job被job sever监听-->
    <bean id="jobHandler" class="com.dooioo.monitor.job.JobHandler" scope="singleton">
    	<property name="appCode" value="${appCode}"></property>
    	<property name="server" value="${jobMonitorServer}"></property>
    	<property name="port" value="${jobMonitorPort}"></property>
    </bean>
</beans>